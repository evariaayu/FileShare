/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package filesharingclient;

import java.awt.Component;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionListener;
import objekClientServer.objekClientServer;

/**
 *
 * @author evaria
 */
public class FileGui extends javax.swing.JFrame {
    private Socket socketClient = null;
    private ObjectOutputStream outputStream = null;
    private boolean isConnected = false;
    private objekClientServer objekCS = null;
    private ObjectInputStream inputStream = null;
    public String destinationPath ="E:/tmp/downloads/";
    public String sourcePath;
    private JList list;
    private DefaultListModel listModel;
    /**
     * Creates new form FileGui
     */
    public FileGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jMenuItem1 = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ipServer = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        portServer = new javax.swing.JTextField();
        okButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        EXIT = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        passUser = new javax.swing.JPasswordField();
        jSeparator1 = new javax.swing.JSeparator();
        Upload = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        browseFileBtn = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListUpload = new javax.swing.JList();
        Download = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listDownload = new javax.swing.JList();
        jProgressBar2 = new javax.swing.JProgressBar();
        refreshBtn = new javax.swing.JButton();
        downloadBtn = new javax.swing.JButton();

        jTextField3.setText("jTextField3");


        jButton2.setText("jButton2");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("User");

        username.setText("evariaayu");

        jLabel2.setText("Port");

        ipServer.setText("127.0.0.1");

        jLabel3.setText("IP");

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Password");

        passUser.setText("1234");
        passUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(okButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clearButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4))
                                .addGap(58, 58, 58)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(username, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                                    .addComponent(passUser)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(84, 84, 84)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(portServer, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ipServer, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(93, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ipServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(portServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(clearButton))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Login", jPanel1);

        browseFileBtn.setText("Upload");
        browseFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseFileBtnActionPerformed(evt);
            }
        });

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(ListUpload);

        javax.swing.GroupLayout UploadLayout = new javax.swing.GroupLayout(Upload);
        Upload.setLayout(UploadLayout);
        UploadLayout.setHorizontalGroup(
            UploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UploadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, UploadLayout.createSequentialGroup()
                        .addComponent(refreshButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(browseFileBtn)
                        .addGap(113, 113, 113))
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        UploadLayout.setVerticalGroup(
            UploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UploadLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(UploadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(browseFileBtn)
                    .addComponent(refreshButton))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("User Upload", Upload);

        listDownload.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listDownload);

        refreshBtn.setText("Refresh");

        downloadBtn.setText("Download");

        javax.swing.GroupLayout DownloadLayout = new javax.swing.GroupLayout(Download);
        Download.setLayout(DownloadLayout);
        DownloadLayout.setHorizontalGroup(
            DownloadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DownloadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DownloadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jProgressBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(DownloadLayout.createSequentialGroup()
                        .addComponent(refreshBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                        .addComponent(downloadBtn)))
                .addContainerGap())
        );
        DownloadLayout.setVerticalGroup(
            DownloadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DownloadLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DownloadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshBtn)
                    .addComponent(downloadBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("User Download", Download);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>                        

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        username.setText("");
        passUser.setText("");
        ipServer.setText("");
        portServer.setText("");
    }                                           

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {                                         
        //   System.out.println(username.getText());
        try {
            socketClient = new Socket(ipServer.getText(),Integer.parseInt(portServer.getText()));
            inputStream = new ObjectInputStream(socketClient.getInputStream());
            outputStream = new ObjectOutputStream(socketClient.getOutputStream());
            objekCS = new objekClientServer();
            objekCS.setPerintah("USER");
            objekCS.setUsername(username.getText());
            objekCS.setNamaFolder(username.getText());
           // objekCS.setPerintah("PASS");
            objekCS.setPassw(passUser.getText());
            //  objekCS.setUsername(pas);
            this.outputStream.writeObject(objekCS);
            outputStream.flush();
                outputStream.reset();
            //aku pingin ngirim USER username
        } catch (IOException ex) {
            Logger.getLogger(FileGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                        

    private void browseFileBtnActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        final JFileChooser fc = new JFileChooser();
        int returnVal;
        returnVal = fc.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION){
            File file = fc.getSelectedFile();
            // System.out.println(file.getAbsolutePath());
            String fileName = file.getName();
            String path = file.getAbsolutePath();
            objekCS = new objekClientServer();
            objekCS.setSourceDirectory(path);
            objekCS.setFilename(fileName);
            objekCS.setDestinationDirectory(destinationPath);
            objekCS.setPerintah("UPLOAD");
            if(file.isFile()){
                try {
                    JProgressBar progressBar;
                    int i = 0, num = 0;
                    DataInputStream dis = new DataInputStream(new FileInputStream(file));
                    long len = (int) file.length();
                    
                    final JFrame f = new JFrame("Sample");
                    f.getContentPane().setLayout(new FlowLayout());
                    progressBar = new JProgressBar(0, (int) len);
                    f.getContentPane().add(progressBar);
                    f.pack();
                    
                    progressBar.setBounds(12,238,340,15);  
                    progressBar.setValue(0);
                    progressBar.setStringPainted(true);
                    add(progressBar);  
                    setLayout(null);  
                    progressBar.setVisible(true); 
                    while(i <= len){  
                        progressBar.setValue(i);  
                        i = i + 500;  
                        progressBar.update(progressBar.getGraphics());
                    } 
                    
                    byte[] fileBytes = new byte[(int) len];
                    dis.readFully(fileBytes, 0, (int) len);
                    
                    objekCS.setFileData(fileBytes);
                    objekCS.setFileSize(len);
                    objekCS.setStatus("Success");
            
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(FileGui.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(FileGui.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
            System.out.println("path specified is not pointing to a file");
            objekCS.setStatus("Error");
           }
            try {
                outputStream.writeObject(objekCS);
                outputStream.flush();
                outputStream.reset();
                
            } catch (IOException ex) {
                Logger.getLogger(FileGui.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }                
    }                                             
    
    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {                                           
        objekCS.setPerintah("LISTFOLDER");
        objekCS.setDestinationDirectory(destinationPath);
        objekCS.setUsername(username.getText());
        try {
            outputStream.writeObject(objekCS);
            outputStream.flush();
            outputStream.reset();
            listFiless = new DefaultListModel();
            ArrayList<String> listFile = new ArrayList<>();
            listFile = (ArrayList<String>) inputStream.readObject();
            for (int i = 0; i < listFile.size(); i++) {
                listFiless.addElement(listFile.get(i));
            }
            listDownload.setModel(listFiless);
        } catch (IOException ex) {
            Logger.getLogger(FileGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FileGui.class.getName()).log(Level.SEVERE, null, ex);
        }  
    } 
    
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {                                              
        objekCS.setPerintah("LISTUSER");
        try {
            outputStream.writeObject(objekCS);
            outputStream.flush();
            outputStream.reset();
            listModel = new DefaultListModel();
            list = new JList();
            System.out.println("unix");
            ArrayList<String> userAktif = new ArrayList<>();
            userAktif = (ArrayList<String>) inputStream.readObject();
            for (int i = 0; i < userAktif.size(); i++) {
                System.out.println("masuk array");
               listModel.addElement(userAktif.get(i));
                System.out.println(userAktif.get(i));
            }
            ListUpload.setModel(listModel);                    
        } catch (IOException ex) {
            Logger.getLogger(FileGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FileGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                             

    private void passUserActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }
    
    private void EXITActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        objekCS.setPerintah("EXIT");
        System.exit(0);
    }   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FileGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JPanel Download;
    private javax.swing.JButton EXIT;
    private javax.swing.JList ListUpload;
    private javax.swing.JPanel Upload;
    private javax.swing.JButton browseFileBtn;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton downloadBtn;
    private javax.swing.JTextField ipServer;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JList listDownload;
    private javax.swing.JButton okButton;
    private javax.swing.JPasswordField passUser;
    private javax.swing.JTextField portServer;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTextField username;
    // End of variables declaration                   
}
